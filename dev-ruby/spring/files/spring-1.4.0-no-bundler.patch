commit 55a8136e7ec8753eca783473710bcf6056c40783
Author: Hans de Graaff <hans@winkwaves.com>
Date:   Tue Oct 6 14:31:33 2015 +0200

    Avoid bundler.

diff --git a/lib/spring/application_manager.rb b/lib/spring/application_manager.rb
index 8b34b9f..739eac6 100644
--- a/lib/spring/application_manager.rb
+++ b/lib/spring/application_manager.rb
@@ -92,7 +92,7 @@ module Spring
     def start_child(preload = false)
       @child, child_socket = UNIXSocket.pair
 
-      Bundler.with_clean_env do
+#      Bundler.with_clean_env do
         @pid = Process.spawn(
           {
             "RAILS_ENV"           => app_env,
@@ -105,7 +105,7 @@ module Spring
           "-e", "require 'spring/application/boot'",
           3 => child_socket
         )
-      end
+#      end
 
       start_wait_thread(pid, child) if child.gets
       child_socket.close
diff --git a/lib/spring/client/run.rb b/lib/spring/client/run.rb
index 4a7c213..f6dd216 100644
--- a/lib/spring/client/run.rb
+++ b/lib/spring/client/run.rb
@@ -66,9 +66,9 @@ module Spring
         env.socket_path.unlink if env.socket_path.exist?
 
         pid = Process.spawn(
-          gem_env,
+          isolate_env,
           "ruby",
-          "-e", "gem 'spring', '#{Spring::VERSION}'; require 'spring/server'; Spring::Server.boot"
+          "-e", "require 'spring/server'; Spring::Server.boot",
         )
 
         until env.socket_path.exist?
@@ -78,6 +78,10 @@ module Spring
         end
       end
 
+      def isolate_env
+        {}
+      end
+
       def gem_env
         bundle = Bundler.bundle_path.to_s
         paths  = Gem.path + ENV["GEM_PATH"].to_s.split(File::PATH_SEPARATOR)
diff --git a/lib/spring/configuration.rb b/lib/spring/configuration.rb
index e25e079..7bc0759 100644
--- a/lib/spring/configuration.rb
+++ b/lib/spring/configuration.rb
@@ -8,6 +8,10 @@ module Spring
       ENV['BUNDLE_GEMFILE'] || "Gemfile"
     end
 
+    def isolatefile
+      'Isolate'
+    end
+
     def after_fork_callbacks
       @after_fork_callbacks ||= []
     end
@@ -42,6 +46,8 @@ module Spring
     def find_project_root(current_dir)
       if current_dir.join(gemfile).exist?
         current_dir
+      elsif current_dir.join(isolatefile).exist?
+        current_dir
       elsif current_dir.root?
         raise UnknownProject.new(Dir.pwd)
       else
